# Builds Shopware Docker images. Useful for verification in continuous integration scenarios, for example:
# on:
#   pull_request:
#     types: [opened, reopened, synchronize]
# jobs:
#   build-images:
#     uses: TorqIT/shopware-github-actions-workflows/.github/workflows/ci-docker-builds@v7
#
# Requires the following permissions to be set in the callig job:
# permissions:
#   contents: read
#   actions: read
#

name: Build Docker images

on:
  workflow_call:
    inputs:
      RUNNER:
        required: false
        type: string
        description: Optional self-hosted runner for this workflow (see https://github.com/TorqIT/shopware-github-actions-workflows#self-hosted-runners)
      SUBMODULES:
        required: false
        type: boolean
        default: false
        description: "Whether to clone submodules when cloning the project repository"
      PHP_VERSION:
        required: false
        type: string
        default: "8.3"
        description: "PHP version to use when running Composer directly"
      SHOPWARE_ROOT:
        required: false
        type: string
        default: "."
        description: "The path (relative to the project's root) in which the Shopware files are stored (e.g. config, src, etc)"
      DOCKERFILE_PATH:
        required: false
        type: string
        default: ".docker/Dockerfile"
        description: "The path (relative to the project's root) of the Dockerfile used to build the init image"

    secrets:
      SHOPWARE_COMPOSER_TOKEN:
        required: true
        description: The value of your project's Shopware Composer token

jobs:
  build-docker-images:
    name: Build Docker images
    runs-on: ${{ inputs.RUNNER || 'ubuntu-latest' }}
    environment: ${{ inputs.ENVIRONMENT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: ${{ inputs.SUBMODULES }}

      - name: Get workflow version
        id: workflow-version
        uses: canonical/get-workflow-version-action@v1
        with:
          repository-name: TorqIT/shopware-github-actions-workflows
          file-name: ci-docker-builds.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout workflow repository to use composite actions
        uses: actions/checkout@v4
        with:
          repository: TorqIT/shopware-github-actions-workflows
          ref: ${{ steps.workflow-version.outputs.sha }}
          path: reusable-workflow
          fetch-depth: 1

      - name: Replace local Composer dependencies with their remote counterparts
        uses: ./reusable-workflow/.github/actions/replace-local-composer-dependencies
        with:
          PHP_VERSION: ${{ inputs.PHP_VERSION }}
          SHOPWARE_ROOT: ${{ inputs.SHOPWARE_ROOT }}
          SHOPWARE_COMPOSER_TOKEN: ${{ secrets.SHOPWARE_COMPOSER_TOKEN }}

      - name: Set up Docker
        uses: ./reusable-workflow/.github/actions/setup-docker

      - name: Build init image
        uses: ./reusable-workflow/.github/actions/build-and-push-shopware-image
        with:
          DOCKERFILE_PATH: ${{ inputs.DOCKERFILE_PATH }}
          DOCKERFILE_TARGET: init
          SHOPWARE_COMPOSER_TOKEN: ${{ secrets.SHOPWARE_COMPOSER_TOKEN }}
          PUSH: "false"

      - name: Build PHP image
        uses: ./reusable-workflow/.github/actions/build-and-push-shopware-image
        with:
          DOCKERFILE_PATH: ${{ inputs.DOCKERFILE_PATH }}
          DOCKERFILE_TARGET: php
          SHOPWARE_COMPOSER_TOKEN: ${{ secrets.SHOPWARE_COMPOSER_TOKEN }}
          PUSH: "false"

      - name: Build supervisord image
        uses: ./reusable-workflow/.github/actions/build-and-push-shopware-image
        with:
          DOCKERFILE_PATH: ${{ inputs.DOCKERFILE_PATH }}
          DOCKERFILE_TARGET: supervisord
          SHOPWARE_COMPOSER_TOKEN: ${{ secrets.SHOPWARE_COMPOSER_TOKEN }}
          PUSH: "false"